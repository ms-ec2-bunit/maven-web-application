node{

def mavenHomeDir = tool name: "maven3.8.6" 

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr:
 '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration',
 changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
 
 try{

slackNotifications('STARTED')

stage('checkOut'){
git branch: 'development', credentialsId: '96e32222-5db7-4331-be5f-b8ef63f4dbff', url: 'https://github.com/ms-ec2-bunit/maven-web-application.git'
}
 stage('Buildcode'){
sh "${mavenHomeDir}/bin/mvn clean package"
}
 stage('GenerageSonarquebRepo'){
sh "${mavenHomeDir}/bin/mvn clean sonar:sonar"
}
stage('uploadartifactstorepo'){
sh "${mavenHomeDir}/bin/mvn clean deploy"
}
stage('DeploytheProjectIntoTomcatServer'){
sshagent(['19cfb7c8-ac2d-4f10-844f-3e87c232ecdc']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.233.231.241:/opt/apache-tomcat-9.0.65/webapps/"
}
} 

}//try block closing
catch (e){
slackNotifications('FAILED')
throw e
}
finally{
slackNotifications(currentBuild.result)
}
}

//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  //buildStatus =  buildStatus ?: 'SUCCESS'
  buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#buildnotifications")
}
